# 用户端配置 - www.yeslocker.com

# HTTP重定向到HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name yeslocker.com www.yeslocker.com;
    
    # Let's Encrypt验证路径
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # 其他请求重定向到HTTPS
    location / {
        return 301 https://www.yeslocker.com$request_uri;
    }
}

# 裸域名重定向到www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yeslocker.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/yeslocker.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/yeslocker.com/privkey.pem;
    
    return 301 https://www.yeslocker.com$request_uri;
}

# 主站HTTPS配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.yeslocker.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/yeslocker.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/yeslocker.com/privkey.pem;
    
    # SSL优化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 安全头部
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https://api.yeslocker.com; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
    
    # 根目录
    root /var/www/yeslocker/user;
    index index.html;
    
    # 日志配置
    access_log /var/log/nginx/www.yeslocker.access.log combined;
    error_log /var/log/nginx/www.yeslocker.error.log warn;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json image/svg+xml;
    gzip_disable "msie6";
    
    # 静态资源缓存策略
    location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    location ~* \.(css|js)$ {
        expires 7d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # 处理manifest.json
    location = /manifest.json {
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # 处理service worker
    location = /sw.js {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # SPA路由支持
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # 错误页面
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
    
    # 拒绝访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 拒绝访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}