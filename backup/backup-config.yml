# YesLocker Automated Backup Configuration
# Comprehensive backup strategy for database, application data, and configurations

backup_strategy:
  # Database backups (Supabase PostgreSQL)
  database:
    enabled: true
    frequency: 
      full_backup: "daily"          # Full database backup daily at 2 AM
      incremental: "6hours"         # Incremental backups every 6 hours
      transaction_log: "15min"      # Transaction log backups every 15 minutes
    retention:
      daily: 30                     # Keep daily backups for 30 days
      weekly: 12                    # Keep weekly backups for 12 weeks  
      monthly: 12                   # Keep monthly backups for 12 months
      yearly: 5                     # Keep yearly backups for 5 years
    compression: true
    encryption: true
    verification: true              # Verify backup integrity after creation

  # Application data backups
  application_data:
    enabled: true
    frequency: "daily"              # Daily at 3 AM
    retention: 90                   # Keep for 90 days
    include:
      - user_uploads                # User uploaded files (avatars, documents)
      - configuration_files         # Application configuration
      - logs                        # Application logs
      - certificates               # SSL certificates
    exclude:
      - node_modules               # Exclude dependencies
      - .git                       # Exclude git history
      - temp_files                 # Exclude temporary files

  # System configuration backups
  system_config:
    enabled: true
    frequency: "daily"              # Daily at 1 AM
    retention: 180                  # Keep for 180 days
    include:
      - docker_configs             # Docker and container configurations
      - nginx_configs              # Web server configurations
      - environment_files          # Environment variables (encrypted)
      - monitoring_configs         # Prometheus/Grafana configurations
      - ssl_certificates           # SSL/TLS certificates

# Backup destinations
destinations:
  primary:
    type: "cloud_storage"
    provider: "aws_s3"              # AWS S3 for primary storage
    bucket: "yeslocker-backups-primary"
    region: "cn-north-1"            # Beijing region for compliance
    encryption: "AES256"
    storage_class: "STANDARD_IA"    # Infrequent access for cost optimization
    
  secondary:
    type: "cloud_storage"  
    provider: "aliyun_oss"          # Alibaba Cloud OSS for secondary storage
    bucket: "yeslocker-backups-secondary"
    region: "cn-beijing"
    encryption: true
    
  tertiary:
    type: "local_storage"           # Local storage for immediate access
    path: "/var/backups/yeslocker"
    retention: 7                    # Keep local backups for 7 days only
    
  offsite:
    type: "remote_server"           # Remote server for disaster recovery
    host: "backup.yeslocker.com"
    path: "/backups/yeslocker"
    encryption: true
    compression: true

# Security settings
security:
  encryption:
    algorithm: "AES-256-GCM"
    key_rotation: true              # Rotate encryption keys monthly
    key_storage: "vault"            # Store keys in HashiCorp Vault
    
  access_control:
    backup_users:                   # Users allowed to manage backups
      - "backup-operator"
      - "system-admin"
    restore_users:                  # Users allowed to restore data
      - "system-admin"
      - "disaster-recovery-team"
      
  compliance:
    gdpr_compliance: true           # GDPR compliance for user data
    data_residency: "china"         # Keep data within China boundaries
    audit_logging: true             # Log all backup operations

# Monitoring and alerting
monitoring:
  enabled: true
  metrics:
    - backup_success_rate          # Success rate of backups
    - backup_duration              # Time taken for each backup
    - backup_size                  # Size of backup files
    - storage_utilization          # Storage space usage
    - restore_test_success         # Success rate of restore tests
    
  alerts:
    backup_failure:
      enabled: true
      threshold: 1                 # Alert on any backup failure
      channels: ["slack", "email", "pagerduty"]
      
    backup_size_anomaly:
      enabled: true
      threshold: "50%"             # Alert if backup size changes >50%
      channels: ["slack", "email"]
      
    storage_quota_warning:
      enabled: true
      threshold: "80%"             # Alert when storage 80% full
      channels: ["slack", "email"]
      
    restore_test_failure:
      enabled: true
      threshold: 1                 # Alert on restore test failure
      channels: ["slack", "email", "pagerduty"]

# Disaster recovery settings
disaster_recovery:
  rpo: "15min"                     # Recovery Point Objective: max 15 min data loss
  rto: "4hours"                    # Recovery Time Objective: max 4 hours downtime
  
  automated_failover:
    enabled: true
    health_checks:
      - database_connectivity
      - application_response
      - critical_services_status
    failover_threshold: "3_consecutive_failures"
    
  backup_testing:
    frequency: "weekly"            # Test backup restoration weekly
    test_database: "yeslocker_backup_test" 
    automated: true
    verification_queries:          # Queries to verify data integrity
      - "SELECT COUNT(*) FROM users"
      - "SELECT COUNT(*) FROM applications" 
      - "SELECT COUNT(*) FROM lockers"
      
  recovery_procedures:
    database_corruption:
      priority: "critical"
      steps:
        - "Stop application services"
        - "Restore from latest full backup"
        - "Apply transaction logs since backup"
        - "Verify data integrity"
        - "Start application services"
        - "Monitor for issues"
        
    complete_system_failure:
      priority: "critical" 
      steps:
        - "Activate disaster recovery site"
        - "Restore system configurations"
        - "Restore database from backup"
        - "Restore application data"
        - "Update DNS records"
        - "Verify all services operational"
        - "Notify stakeholders"

# Backup scheduling
schedule:
  timezone: "Asia/Shanghai"
  
  database_full_backup:
    time: "02:00"                  # 2:00 AM daily
    days: ["daily"]
    
  database_incremental:
    times: ["08:00", "14:00", "20:00"]  # 8 AM, 2 PM, 8 PM
    days: ["daily"]
    
  database_transaction_log:
    interval: "15min"              # Every 15 minutes
    
  application_data:
    time: "03:00"                  # 3:00 AM daily  
    days: ["daily"]
    
  system_config:
    time: "01:00"                  # 1:00 AM daily
    days: ["daily"]
    
  restore_testing:
    time: "05:00"                  # 5:00 AM every Sunday
    days: ["sunday"]

# Performance optimization
performance:
  parallel_backups: 3              # Run up to 3 backups in parallel
  compression_level: 6             # Balance between speed and size
  bandwidth_limit: "100MB/s"       # Limit backup bandwidth usage
  
  incremental_backup:
    enabled: true
    track_changes: "block_level"   # Block-level change tracking
    
  deduplication:
    enabled: true
    algorithm: "content_based"     # Content-based deduplication
    
# Compliance and regulations  
compliance:
  data_protection:
    personal_data_encryption: true # Encrypt all personal data
    data_masking: true            # Mask sensitive data in test backups
    right_to_be_forgotten: true   # Support GDPR deletion requests
    
  audit_requirements:
    backup_logs: true             # Log all backup operations
    access_logs: true             # Log all backup access
    integrity_checks: true        # Regular integrity verification
    
  retention_policies:
    legal_hold: true              # Support legal hold requirements
    automatic_deletion: true     # Automatic deletion after retention period
    secure_deletion: true        # Secure deletion of expired backups

# Integration settings
integrations:
  monitoring:
    prometheus: true              # Export metrics to Prometheus
    grafana_dashboard: true       # Create Grafana dashboard
    
  notifications:
    slack:
      webhook_url: "${SLACK_BACKUP_WEBHOOK}"
      channel: "#backup-alerts"
      
    email:
      smtp_server: "smtp.yeslocker.com"
      recipients: ["admin@yeslocker.com", "backup@yeslocker.com"]
      
    pagerduty:
      integration_key: "${PAGERDUTY_BACKUP_KEY}"
      
  ticketing:
    jira:
      enabled: true
      project: "OPS"
      issue_type: "Incident"
      
# Environment-specific settings
environments:
  production:
    backup_frequency: "high"      # More frequent backups in production
    retention: "extended"         # Longer retention in production
    monitoring: "comprehensive"   # Full monitoring in production
    
  staging:
    backup_frequency: "medium"    # Moderate backup frequency
    retention: "standard"         # Standard retention
    monitoring: "basic"           # Basic monitoring
    
  development:
    backup_frequency: "low"       # Less frequent backups
    retention: "minimal"          # Minimal retention
    monitoring: "basic"           # Basic monitoring